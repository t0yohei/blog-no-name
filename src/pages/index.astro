---
// export const prerender = false;
import HomeLayout from '../layouts/HomeLayout.astro';
import Card from '../components/Card.astro';
import '../styles/global.css';
import { getCollection, type CollectionEntry } from 'astro:content';
import { parseDate, type Post } from '../model';

const buildPosts = async (): Promise<Post[]> => {
  const getAllPosts = async (): Promise<Post[]> => {
    const blogs: CollectionEntry<'blogs'>[] = await getCollection('blogs');
    const slides: CollectionEntry<'slides'>[] = await getCollection('slides');
    const qiitas: CollectionEntry<'qiitas'>[] = await getCollection('qiitas');
    const zenns: CollectionEntry<'zenns'>[] = await getCollection('zenns');
    const devTos: CollectionEntry<'devTos'>[] = await getCollection('devTos');
    return [...blogs, ...slides, ...qiitas, ...zenns, ...devTos];
  };

  const sortPostsByDate = (posts: Post[]) => {
    return posts.sort((a, b) => {
      const aDate = parseDate(a);
      const bDate = parseDate(b);
      return (bDate?.getTime() ?? 0) - (aDate?.getTime() ?? 0);
    });
  };

  return sortPostsByDate(await getAllPosts());
};

const posts = await buildPosts();
---

<HomeLayout title="Blog No Name">
  <main>
    <h1>Blog <span class="text-gradient">No Name</span></h1>
    <ul role="list" class="link-card-grid">
      {posts.map((post) => <Card post={post} />)}
    </ul>
  </main>
</HomeLayout>

<style>
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(335px, 1fr));
    gap: 1.5rem;
    padding: 0;
  }
</style>
