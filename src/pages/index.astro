---
import HomeLayout from '../layouts/HomeLayout.astro';
import Card from '../components/Card.astro';
import '../styles/global.css';
import { getCollection } from 'astro:content';

const allBlogs = await getCollection('blogs');
const sortedBlogs = allBlogs.sort((a, b) => {
  return a.data.pubdate.getTime() - b.data.pubdate.getTime();
});

const arrangePreview = (rawContent: string): string => {
  const headSentence = rawContent.substring(0, 50);
  return headSentence.replace(/.$/, '...');
};
---

<HomeLayout title="Blog No Name">
  <main>
    <h1>Blog <span class="text-gradient">No Name</span></h1>
    <ul role="list" class="link-card-grid">
      {
        sortedBlogs.map((blog) => (
          <Card
            href={`blogs/${blog.id}` || ''}
            title={blog.data.title}
            body={arrangePreview(blog.body || '')}
            pubdate={blog.data.pubdate.toISOString().slice(0, 10)}
          />
        ))
      }
    </ul>
  </main>
</HomeLayout>

<style>
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(335px, 1fr));
    gap: 1.5rem;
    padding: 0;
  }
</style>
