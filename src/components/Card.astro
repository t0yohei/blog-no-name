---
import { type Post } from '../model';

export interface Props {
  post: Post;
}

const { post } = Astro.props;

const createPreview = (): string => {
  const content = post.collection === 'blogs' ? post.body ?? '' : post.data.summary ?? '';

  if (!content) return '';
  return content.substring(0, 50).replace(/.$/, '...');
};

const getPostHref = (): string => {
  return post.collection === 'blogs' ? `blogs/${post.id}` : post.data.link ?? '';
};
---

<li class="link-card">
  <a href={getPostHref()}>
    <h2>
      {post.data.title ?? ''}
      <span>&rarr;</span>
    </h2>
    <p class="blog-body">
      {createPreview()}
    </p>
    <p class="pub-date">
      {post.data.pubdate?.toISOString().slice(0, 10) ?? ''}
    </p>
  </a>
</li>
<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 0.15rem;
    background-color: white;
    background-image: var(--accent-gradient);
    background-size: 400%;
    border-radius: 0.5rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1rem 1.3rem;
    border-radius: 0.35rem;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    color: #444;
  }
  .blog-body {
    font-size: 1.1rem;
    margin-bottom: 1rem;
  }
  .pub-date {
    position: absolute;
    right: 15px;
    bottom: 10px;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent));
  }
</style>
